#############################################################################
# Makefile for building: opengazer.app/Contents/MacOS/opengazer
# Generated by qmake (2.01a) (Qt 4.8.5) on: mié jun 3 15:59:51 2015
# Project:  opengazer.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/local/Qt4.8/mkspecs/macx-g++ -o Makefile opengazer.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe `pkg-config opencv --cflags` -include Prefix.hpp -stdlib=libc++ -g -gdwarf-2 -arch x86_64 -Xarch_x86_64 -mmacosx-version-min=10.10 -Wall -W $(DEFINES)
CXXFLAGS      = -pipe `pkg-config opencv --cflags` -include Prefix.hpp -stdlib=libc++ -g -gdwarf-2 -arch x86_64 -Xarch_x86_64 -mmacosx-version-min=10.10 -Wall -W $(DEFINES)
INCPATH       = -I/usr/local/Qt4.8/mkspecs/macx-g++ -I. -I/Library/Frameworks/QtCore.framework/Versions/4/Headers -I/usr/include/QtCore -I/Library/Frameworks/QtGui.framework/Versions/4/Headers -I/usr/include/QtGui -I/usr/include -I. -F/Library/Frameworks
LINK          = g++
LFLAGS        = -headerpad_max_install_names -arch x86_64 -Xarch_x86_64 -mmacosx-version-min=10.10
LIBS          = $(SUBLIBS) -F/Library/Frameworks -L/Library/Frameworks `pkg-config opencv --libs` -L/opt/local/lib -lm -ldl -lgthread-2.0 -lfann -lboost_filesystem-mt -lboost_system-mt -lgsl -lgslcblas -framework QtGui -framework QtCore 
AR            = ar cq
RANLIB        = ranlib -s
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = 
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
export MACOSX_DEPLOYMENT_TARGET = 10.8

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = opengazer.cpp \
		Calibrator.cpp \
		HeadTracker.cpp \
		LeastSquares.cpp \
		EyeExtractor.cpp \
		GazeTracker.cpp \
		MainGazeTracker.cpp \
		OutputMethods.cpp \
		PointTracker.cpp \
		FaceDetector.cpp \
		Point.cpp \
		utils.cpp \
		BlinkDetector.cpp \
		FeatureDetector.cpp \
		mir.cpp \
		DebugWindow.cpp \
		Application.cpp \
		Video.cpp \
		Detection.cpp \
		Command.cpp \
		ImageWindow.cpp \
		ImageWidget.cpp \
		TestWindow.cpp \
		HeadCompensation.cpp \
		HiResTimer.cpp \
		ExtractEyeFeaturesSegmentation.cpp \
		GoogleGlassWindow.cpp \
		EyeExtractorSegmentationGrountruth.cpp \
		GazeTrackerHistogramFeatures.cpp moc_MainGazeTracker.cpp \
		moc_ImageWidget.cpp
OBJECTS       = opengazer.o \
		Calibrator.o \
		HeadTracker.o \
		LeastSquares.o \
		EyeExtractor.o \
		GazeTracker.o \
		MainGazeTracker.o \
		OutputMethods.o \
		PointTracker.o \
		FaceDetector.o \
		Point.o \
		utils.o \
		BlinkDetector.o \
		FeatureDetector.o \
		mir.o \
		DebugWindow.o \
		Application.o \
		Video.o \
		Detection.o \
		Command.o \
		ImageWindow.o \
		ImageWidget.o \
		TestWindow.o \
		HeadCompensation.o \
		HiResTimer.o \
		ExtractEyeFeaturesSegmentation.o \
		GoogleGlassWindow.o \
		EyeExtractorSegmentationGrountruth.o \
		GazeTrackerHistogramFeatures.o \
		moc_MainGazeTracker.o \
		moc_ImageWidget.o
DIST          = /usr/local/Qt4.8/mkspecs/common/unix.conf \
		/usr/local/Qt4.8/mkspecs/common/mac.conf \
		/usr/local/Qt4.8/mkspecs/common/gcc-base.conf \
		/usr/local/Qt4.8/mkspecs/common/gcc-base-macx.conf \
		/usr/local/Qt4.8/mkspecs/common/g++-base.conf \
		/usr/local/Qt4.8/mkspecs/common/g++-macx.conf \
		/usr/local/Qt4.8/mkspecs/qconfig.pri \
		/usr/local/Qt4.8/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Qt4.8/mkspecs/features/qt_functions.prf \
		/usr/local/Qt4.8/mkspecs/features/qt_config.prf \
		/usr/local/Qt4.8/mkspecs/features/exclusive_builds.prf \
		/usr/local/Qt4.8/mkspecs/features/default_pre.prf \
		/usr/local/Qt4.8/mkspecs/features/mac/default_pre.prf \
		/usr/local/Qt4.8/mkspecs/features/mac/dwarf2.prf \
		/usr/local/Qt4.8/mkspecs/features/debug.prf \
		/usr/local/Qt4.8/mkspecs/features/default_post.prf \
		/usr/local/Qt4.8/mkspecs/features/mac/default_post.prf \
		/usr/local/Qt4.8/mkspecs/features/mac/x86_64.prf \
		/usr/local/Qt4.8/mkspecs/features/mac/objective_c.prf \
		/usr/local/Qt4.8/mkspecs/features/qt.prf \
		/usr/local/Qt4.8/mkspecs/features/unix/thread.prf \
		/usr/local/Qt4.8/mkspecs/features/moc.prf \
		/usr/local/Qt4.8/mkspecs/features/shared.prf \
		/usr/local/Qt4.8/mkspecs/features/warn_on.prf \
		/usr/local/Qt4.8/mkspecs/features/mac/rez.prf \
		/usr/local/Qt4.8/mkspecs/features/mac/sdk.prf \
		/usr/local/Qt4.8/mkspecs/features/resources.prf \
		/usr/local/Qt4.8/mkspecs/features/uic.prf \
		/usr/local/Qt4.8/mkspecs/features/yacc.prf \
		/usr/local/Qt4.8/mkspecs/features/lex.prf \
		/usr/local/Qt4.8/mkspecs/features/include_source_dir.prf \
		opengazer.pro
QMAKE_TARGET  = opengazer
DESTDIR       = 
TARGET        = opengazer.app/Contents/MacOS/opengazer

####### Custom Compiler Variables
QMAKE_COMP_QMAKE_OBJECTIVE_CFLAGS = -pipe \
		-g \
		-arch \
		x86_64 \
		-Xarch_x86_64 \
		-mmacosx-version-min=10.10 \
		-Wall \
		-W


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile opengazer.app/Contents/PkgInfo opengazer.app/Contents/Resources/empty.lproj opengazer.app/Contents/Info.plist $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) opengazer.app/Contents/MacOS/ || $(MKDIR) opengazer.app/Contents/MacOS/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: opengazer.pro  /usr/local/Qt4.8/mkspecs/macx-g++/qmake.conf /usr/local/Qt4.8/mkspecs/common/unix.conf \
		/usr/local/Qt4.8/mkspecs/common/mac.conf \
		/usr/local/Qt4.8/mkspecs/common/gcc-base.conf \
		/usr/local/Qt4.8/mkspecs/common/gcc-base-macx.conf \
		/usr/local/Qt4.8/mkspecs/common/g++-base.conf \
		/usr/local/Qt4.8/mkspecs/common/g++-macx.conf \
		/usr/local/Qt4.8/mkspecs/qconfig.pri \
		/usr/local/Qt4.8/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Qt4.8/mkspecs/features/qt_functions.prf \
		/usr/local/Qt4.8/mkspecs/features/qt_config.prf \
		/usr/local/Qt4.8/mkspecs/features/exclusive_builds.prf \
		/usr/local/Qt4.8/mkspecs/features/default_pre.prf \
		/usr/local/Qt4.8/mkspecs/features/mac/default_pre.prf \
		/usr/local/Qt4.8/mkspecs/features/mac/dwarf2.prf \
		/usr/local/Qt4.8/mkspecs/features/debug.prf \
		/usr/local/Qt4.8/mkspecs/features/default_post.prf \
		/usr/local/Qt4.8/mkspecs/features/mac/default_post.prf \
		/usr/local/Qt4.8/mkspecs/features/mac/x86_64.prf \
		/usr/local/Qt4.8/mkspecs/features/mac/objective_c.prf \
		/usr/local/Qt4.8/mkspecs/features/qt.prf \
		/usr/local/Qt4.8/mkspecs/features/unix/thread.prf \
		/usr/local/Qt4.8/mkspecs/features/moc.prf \
		/usr/local/Qt4.8/mkspecs/features/shared.prf \
		/usr/local/Qt4.8/mkspecs/features/warn_on.prf \
		/usr/local/Qt4.8/mkspecs/features/mac/rez.prf \
		/usr/local/Qt4.8/mkspecs/features/mac/sdk.prf \
		/usr/local/Qt4.8/mkspecs/features/resources.prf \
		/usr/local/Qt4.8/mkspecs/features/uic.prf \
		/usr/local/Qt4.8/mkspecs/features/yacc.prf \
		/usr/local/Qt4.8/mkspecs/features/lex.prf \
		/usr/local/Qt4.8/mkspecs/features/include_source_dir.prf \
		/Library/Frameworks/QtGui.framework/QtGui.prl \
		/Library/Frameworks/QtCore.framework/QtCore.prl
	$(QMAKE) -spec /usr/local/Qt4.8/mkspecs/macx-g++ -o Makefile opengazer.pro
/usr/local/Qt4.8/mkspecs/common/unix.conf:
/usr/local/Qt4.8/mkspecs/common/mac.conf:
/usr/local/Qt4.8/mkspecs/common/gcc-base.conf:
/usr/local/Qt4.8/mkspecs/common/gcc-base-macx.conf:
/usr/local/Qt4.8/mkspecs/common/g++-base.conf:
/usr/local/Qt4.8/mkspecs/common/g++-macx.conf:
/usr/local/Qt4.8/mkspecs/qconfig.pri:
/usr/local/Qt4.8/mkspecs/modules/qt_webkit_version.pri:
/usr/local/Qt4.8/mkspecs/features/qt_functions.prf:
/usr/local/Qt4.8/mkspecs/features/qt_config.prf:
/usr/local/Qt4.8/mkspecs/features/exclusive_builds.prf:
/usr/local/Qt4.8/mkspecs/features/default_pre.prf:
/usr/local/Qt4.8/mkspecs/features/mac/default_pre.prf:
/usr/local/Qt4.8/mkspecs/features/mac/dwarf2.prf:
/usr/local/Qt4.8/mkspecs/features/debug.prf:
/usr/local/Qt4.8/mkspecs/features/default_post.prf:
/usr/local/Qt4.8/mkspecs/features/mac/default_post.prf:
/usr/local/Qt4.8/mkspecs/features/mac/x86_64.prf:
/usr/local/Qt4.8/mkspecs/features/mac/objective_c.prf:
/usr/local/Qt4.8/mkspecs/features/qt.prf:
/usr/local/Qt4.8/mkspecs/features/unix/thread.prf:
/usr/local/Qt4.8/mkspecs/features/moc.prf:
/usr/local/Qt4.8/mkspecs/features/shared.prf:
/usr/local/Qt4.8/mkspecs/features/warn_on.prf:
/usr/local/Qt4.8/mkspecs/features/mac/rez.prf:
/usr/local/Qt4.8/mkspecs/features/mac/sdk.prf:
/usr/local/Qt4.8/mkspecs/features/resources.prf:
/usr/local/Qt4.8/mkspecs/features/uic.prf:
/usr/local/Qt4.8/mkspecs/features/yacc.prf:
/usr/local/Qt4.8/mkspecs/features/lex.prf:
/usr/local/Qt4.8/mkspecs/features/include_source_dir.prf:
/Library/Frameworks/QtGui.framework/QtGui.prl:
/Library/Frameworks/QtCore.framework/QtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/local/Qt4.8/mkspecs/macx-g++ -o Makefile opengazer.pro

opengazer.app/Contents/PkgInfo: 
	@$(CHK_DIR_EXISTS) opengazer.app/Contents || $(MKDIR) opengazer.app/Contents 
	@$(DEL_FILE) opengazer.app/Contents/PkgInfo
	@echo "APPL????" >opengazer.app/Contents/PkgInfo
opengazer.app/Contents/Resources/empty.lproj: 
	@$(CHK_DIR_EXISTS) opengazer.app/Contents/Resources || $(MKDIR) opengazer.app/Contents/Resources 
	@touch opengazer.app/Contents/Resources/empty.lproj
	
opengazer.app/Contents/Info.plist: 
	@$(CHK_DIR_EXISTS) opengazer.app/Contents || $(MKDIR) opengazer.app/Contents 
	@$(DEL_FILE) opengazer.app/Contents/Info.plist
	@sed -e "s,@SHORT_VERSION@,1.0,g" -e "s,@TYPEINFO@,????,g" -e "s,@ICON@,,g" -e "s,@EXECUTABLE@,opengazer,g" -e "s,@TYPEINFO@,????,g" /usr/local/Qt4.8/mkspecs/macx-g++/Info.plist.app >opengazer.app/Contents/Info.plist
dist: 
	@$(CHK_DIR_EXISTS) .tmp/opengazer1.0.0 || $(MKDIR) .tmp/opengazer1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/opengazer1.0.0/ && $(COPY_FILE) --parents Calibrator.h HeadTracker.h LeastSquares.h EyeExtractor.h GazeTracker.h MainGazeTracker.h OutputMethods.h PointTracker.h FaceDetector.h Point.h utils.h BlinkDetector.h FeatureDetector.h mir.h DebugWindow.h Application.h Video.h Detection.h Command.h ImageWindow.h ImageWidget.h TestWindow.h Prefix.hpp HeadCompensation.h HiResTimer.h ExtractEyeFeaturesSegmentation.h GoogleGlassWindow.h EyeExtractorSegmentationGrountruth.h GazeTrackerHistogramFeatures.h .tmp/opengazer1.0.0/ && $(COPY_FILE) --parents opengazer.cpp Calibrator.cpp HeadTracker.cpp LeastSquares.cpp EyeExtractor.cpp GazeTracker.cpp MainGazeTracker.cpp OutputMethods.cpp PointTracker.cpp FaceDetector.cpp Point.cpp utils.cpp BlinkDetector.cpp FeatureDetector.cpp mir.cpp DebugWindow.cpp Application.cpp Video.cpp Detection.cpp Command.cpp ImageWindow.cpp ImageWidget.cpp TestWindow.cpp HeadCompensation.cpp HiResTimer.cpp ExtractEyeFeaturesSegmentation.cpp GoogleGlassWindow.cpp EyeExtractorSegmentationGrountruth.cpp GazeTrackerHistogramFeatures.cpp .tmp/opengazer1.0.0/ && (cd `dirname .tmp/opengazer1.0.0` && $(TAR) opengazer1.0.0.tar opengazer1.0.0 && $(COMPRESS) opengazer1.0.0.tar) && $(MOVE) `dirname .tmp/opengazer1.0.0`/opengazer1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/opengazer1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) -r opengazer.app
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_objective_c_make_all:
compiler_objective_c_clean:
compiler_moc_header_make_all: moc_MainGazeTracker.cpp moc_ImageWidget.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_MainGazeTracker.cpp moc_ImageWidget.cpp
moc_MainGazeTracker.cpp: Calibrator.h \
		ImageWindow.h \
		ImageWidget.h \
		Point.h \
		OutputMethods.h \
		GazeTracker.h \
		utils.h \
		GaussianProcess.cpp \
		Video.h \
		Command.h \
		MainGazeTracker.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ MainGazeTracker.h -o moc_MainGazeTracker.cpp

moc_ImageWidget.cpp: ImageWidget.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ ImageWidget.h -o moc_ImageWidget.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_rez_source_make_all:
compiler_rez_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

opengazer.o: opengazer.cpp MainGazeTracker.h \
		Calibrator.h \
		ImageWindow.h \
		ImageWidget.h \
		Point.h \
		OutputMethods.h \
		GazeTracker.h \
		utils.h \
		GaussianProcess.cpp \
		Video.h \
		Command.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o opengazer.o opengazer.cpp

Calibrator.o: Calibrator.cpp Calibrator.h \
		ImageWindow.h \
		ImageWidget.h \
		Point.h \
		Application.h \
		OutputMethods.h \
		GazeTracker.h \
		utils.h \
		GaussianProcess.cpp \
		Video.h \
		DebugWindow.h \
		HeadCompensation.h \
		LeastSquares.h \
		HeadTracker.h \
		PointTracker.h \
		EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		EyeExtractorSegmentationGrountruth.h \
		ExtractEyeFeaturesSegmentation.h \
		MainGazeTracker.h \
		Command.h \
		TestWindow.h \
		GoogleGlassWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Calibrator.o Calibrator.cpp

HeadTracker.o: HeadTracker.cpp HeadTracker.h \
		PointTracker.h \
		Point.h \
		FMatrixAffineCompute.cpp \
		utils.h \
		Application.h \
		OutputMethods.h \
		GazeTracker.h \
		GaussianProcess.cpp \
		Video.h \
		Calibrator.h \
		ImageWindow.h \
		ImageWidget.h \
		DebugWindow.h \
		HeadCompensation.h \
		LeastSquares.h \
		EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		EyeExtractorSegmentationGrountruth.h \
		ExtractEyeFeaturesSegmentation.h \
		MainGazeTracker.h \
		Command.h \
		TestWindow.h \
		GoogleGlassWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o HeadTracker.o HeadTracker.cpp

LeastSquares.o: LeastSquares.cpp LeastSquares.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o LeastSquares.o LeastSquares.cpp

EyeExtractor.o: EyeExtractor.cpp EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		Application.h \
		OutputMethods.h \
		GazeTracker.h \
		utils.h \
		Point.h \
		GaussianProcess.cpp \
		Video.h \
		Calibrator.h \
		ImageWindow.h \
		ImageWidget.h \
		DebugWindow.h \
		HeadCompensation.h \
		LeastSquares.h \
		HeadTracker.h \
		PointTracker.h \
		EyeExtractorSegmentationGrountruth.h \
		ExtractEyeFeaturesSegmentation.h \
		MainGazeTracker.h \
		Command.h \
		TestWindow.h \
		GoogleGlassWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EyeExtractor.o EyeExtractor.cpp

GazeTracker.o: GazeTracker.cpp GazeTracker.h \
		utils.h \
		Point.h \
		GaussianProcess.cpp \
		EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		mir.h \
		Application.h \
		OutputMethods.h \
		Video.h \
		Calibrator.h \
		ImageWindow.h \
		ImageWidget.h \
		DebugWindow.h \
		HeadCompensation.h \
		LeastSquares.h \
		HeadTracker.h \
		PointTracker.h \
		EyeExtractorSegmentationGrountruth.h \
		ExtractEyeFeaturesSegmentation.h \
		MainGazeTracker.h \
		Command.h \
		TestWindow.h \
		GoogleGlassWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GazeTracker.o GazeTracker.cpp

MainGazeTracker.o: MainGazeTracker.cpp MainGazeTracker.h \
		Calibrator.h \
		ImageWindow.h \
		ImageWidget.h \
		Point.h \
		OutputMethods.h \
		GazeTracker.h \
		utils.h \
		GaussianProcess.cpp \
		Video.h \
		Command.h \
		PointTracker.h \
		EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		HeadTracker.h \
		HeadCompensation.h \
		LeastSquares.h \
		Application.h \
		DebugWindow.h \
		EyeExtractorSegmentationGrountruth.h \
		ExtractEyeFeaturesSegmentation.h \
		TestWindow.h \
		GoogleGlassWindow.h \
		FaceDetector.h \
		Detection.h \
		HiResTimer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MainGazeTracker.o MainGazeTracker.cpp

OutputMethods.o: OutputMethods.cpp OutputMethods.h \
		GazeTracker.h \
		utils.h \
		Point.h \
		GaussianProcess.cpp \
		Application.h \
		Video.h \
		Calibrator.h \
		ImageWindow.h \
		ImageWidget.h \
		DebugWindow.h \
		HeadCompensation.h \
		LeastSquares.h \
		HeadTracker.h \
		PointTracker.h \
		EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		EyeExtractorSegmentationGrountruth.h \
		ExtractEyeFeaturesSegmentation.h \
		MainGazeTracker.h \
		Command.h \
		TestWindow.h \
		GoogleGlassWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o OutputMethods.o OutputMethods.cpp

PointTracker.o: PointTracker.cpp PointTracker.h \
		Point.h \
		Application.h \
		OutputMethods.h \
		GazeTracker.h \
		utils.h \
		GaussianProcess.cpp \
		Video.h \
		Calibrator.h \
		ImageWindow.h \
		ImageWidget.h \
		DebugWindow.h \
		HeadCompensation.h \
		LeastSquares.h \
		HeadTracker.h \
		EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		EyeExtractorSegmentationGrountruth.h \
		ExtractEyeFeaturesSegmentation.h \
		MainGazeTracker.h \
		Command.h \
		TestWindow.h \
		GoogleGlassWindow.h \
		FaceDetector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PointTracker.o PointTracker.cpp

FaceDetector.o: FaceDetector.cpp FaceDetector.h \
		utils.h \
		Point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FaceDetector.o FaceDetector.cpp

Point.o: Point.cpp Point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Point.o Point.cpp

utils.o: utils.cpp utils.h \
		Point.h \
		Application.h \
		OutputMethods.h \
		GazeTracker.h \
		GaussianProcess.cpp \
		Video.h \
		Calibrator.h \
		ImageWindow.h \
		ImageWidget.h \
		DebugWindow.h \
		HeadCompensation.h \
		LeastSquares.h \
		HeadTracker.h \
		PointTracker.h \
		EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		EyeExtractorSegmentationGrountruth.h \
		ExtractEyeFeaturesSegmentation.h \
		MainGazeTracker.h \
		Command.h \
		TestWindow.h \
		GoogleGlassWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o utils.o utils.cpp

BlinkDetector.o: BlinkDetector.cpp BlinkDetector.h \
		EyeExtractor.h \
		FeatureDetector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BlinkDetector.o BlinkDetector.cpp

FeatureDetector.o: FeatureDetector.cpp FeatureDetector.h \
		utils.h \
		Point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FeatureDetector.o FeatureDetector.cpp

mir.o: mir.cpp mir.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mir.o mir.cpp

DebugWindow.o: DebugWindow.cpp DebugWindow.h \
		ImageWindow.h \
		ImageWidget.h \
		Application.h \
		OutputMethods.h \
		GazeTracker.h \
		utils.h \
		Point.h \
		GaussianProcess.cpp \
		Video.h \
		Calibrator.h \
		HeadCompensation.h \
		LeastSquares.h \
		HeadTracker.h \
		PointTracker.h \
		EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		EyeExtractorSegmentationGrountruth.h \
		ExtractEyeFeaturesSegmentation.h \
		MainGazeTracker.h \
		Command.h \
		TestWindow.h \
		GoogleGlassWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DebugWindow.o DebugWindow.cpp

Application.o: Application.cpp Application.h \
		OutputMethods.h \
		GazeTracker.h \
		utils.h \
		Point.h \
		GaussianProcess.cpp \
		Video.h \
		Calibrator.h \
		ImageWindow.h \
		ImageWidget.h \
		DebugWindow.h \
		HeadCompensation.h \
		LeastSquares.h \
		HeadTracker.h \
		PointTracker.h \
		EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		EyeExtractorSegmentationGrountruth.h \
		ExtractEyeFeaturesSegmentation.h \
		MainGazeTracker.h \
		Command.h \
		TestWindow.h \
		GoogleGlassWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Application.o Application.cpp

Video.o: Video.cpp Video.h \
		HiResTimer.h \
		utils.h \
		Point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Video.o Video.cpp

Detection.o: Detection.cpp Detection.h \
		Point.h \
		Application.h \
		OutputMethods.h \
		GazeTracker.h \
		utils.h \
		GaussianProcess.cpp \
		Video.h \
		Calibrator.h \
		ImageWindow.h \
		ImageWidget.h \
		DebugWindow.h \
		HeadCompensation.h \
		LeastSquares.h \
		HeadTracker.h \
		PointTracker.h \
		EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		EyeExtractorSegmentationGrountruth.h \
		ExtractEyeFeaturesSegmentation.h \
		MainGazeTracker.h \
		Command.h \
		TestWindow.h \
		GoogleGlassWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Detection.o Detection.cpp

Command.o: Command.cpp Command.h \
		utils.h \
		Point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Command.o Command.cpp

ImageWindow.o: ImageWindow.cpp ImageWindow.h \
		ImageWidget.h \
		Application.h \
		OutputMethods.h \
		GazeTracker.h \
		utils.h \
		Point.h \
		GaussianProcess.cpp \
		Video.h \
		Calibrator.h \
		DebugWindow.h \
		HeadCompensation.h \
		LeastSquares.h \
		HeadTracker.h \
		PointTracker.h \
		EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		EyeExtractorSegmentationGrountruth.h \
		ExtractEyeFeaturesSegmentation.h \
		MainGazeTracker.h \
		Command.h \
		TestWindow.h \
		GoogleGlassWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ImageWindow.o ImageWindow.cpp

ImageWidget.o: ImageWidget.cpp ImageWidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ImageWidget.o ImageWidget.cpp

TestWindow.o: TestWindow.cpp TestWindow.h \
		ImageWindow.h \
		ImageWidget.h \
		Point.h \
		Application.h \
		OutputMethods.h \
		GazeTracker.h \
		utils.h \
		GaussianProcess.cpp \
		Video.h \
		Calibrator.h \
		DebugWindow.h \
		HeadCompensation.h \
		LeastSquares.h \
		HeadTracker.h \
		PointTracker.h \
		EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		EyeExtractorSegmentationGrountruth.h \
		ExtractEyeFeaturesSegmentation.h \
		MainGazeTracker.h \
		Command.h \
		GoogleGlassWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TestWindow.o TestWindow.cpp

HeadCompensation.o: HeadCompensation.cpp HeadCompensation.h \
		LeastSquares.h \
		HeadTracker.h \
		PointTracker.h \
		Point.h \
		Application.h \
		OutputMethods.h \
		GazeTracker.h \
		utils.h \
		GaussianProcess.cpp \
		Video.h \
		Calibrator.h \
		ImageWindow.h \
		ImageWidget.h \
		DebugWindow.h \
		EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		EyeExtractorSegmentationGrountruth.h \
		ExtractEyeFeaturesSegmentation.h \
		MainGazeTracker.h \
		Command.h \
		TestWindow.h \
		GoogleGlassWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o HeadCompensation.o HeadCompensation.cpp

HiResTimer.o: HiResTimer.cpp HiResTimer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o HiResTimer.o HiResTimer.cpp

ExtractEyeFeaturesSegmentation.o: ExtractEyeFeaturesSegmentation.cpp ExtractEyeFeaturesSegmentation.h \
		utils.h \
		Point.h \
		EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		Application.h \
		OutputMethods.h \
		GazeTracker.h \
		GaussianProcess.cpp \
		Video.h \
		Calibrator.h \
		ImageWindow.h \
		ImageWidget.h \
		DebugWindow.h \
		HeadCompensation.h \
		LeastSquares.h \
		HeadTracker.h \
		PointTracker.h \
		EyeExtractorSegmentationGrountruth.h \
		MainGazeTracker.h \
		Command.h \
		TestWindow.h \
		GoogleGlassWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ExtractEyeFeaturesSegmentation.o ExtractEyeFeaturesSegmentation.cpp

GoogleGlassWindow.o: GoogleGlassWindow.cpp GoogleGlassWindow.h \
		ImageWindow.h \
		ImageWidget.h \
		Point.h \
		Application.h \
		OutputMethods.h \
		GazeTracker.h \
		utils.h \
		GaussianProcess.cpp \
		Video.h \
		Calibrator.h \
		DebugWindow.h \
		HeadCompensation.h \
		LeastSquares.h \
		HeadTracker.h \
		PointTracker.h \
		EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		EyeExtractorSegmentationGrountruth.h \
		ExtractEyeFeaturesSegmentation.h \
		MainGazeTracker.h \
		Command.h \
		TestWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GoogleGlassWindow.o GoogleGlassWindow.cpp

EyeExtractorSegmentationGrountruth.o: EyeExtractorSegmentationGrountruth.cpp EyeExtractorSegmentationGrountruth.h \
		BlinkDetector.h \
		FeatureDetector.h \
		Application.h \
		OutputMethods.h \
		GazeTracker.h \
		utils.h \
		Point.h \
		GaussianProcess.cpp \
		Video.h \
		Calibrator.h \
		ImageWindow.h \
		ImageWidget.h \
		DebugWindow.h \
		HeadCompensation.h \
		LeastSquares.h \
		HeadTracker.h \
		PointTracker.h \
		EyeExtractor.h \
		ExtractEyeFeaturesSegmentation.h \
		MainGazeTracker.h \
		Command.h \
		TestWindow.h \
		GoogleGlassWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EyeExtractorSegmentationGrountruth.o EyeExtractorSegmentationGrountruth.cpp

GazeTrackerHistogramFeatures.o: GazeTrackerHistogramFeatures.cpp GazeTrackerHistogramFeatures.h \
		utils.h \
		Point.h \
		GaussianProcess.cpp \
		EyeExtractor.h \
		BlinkDetector.h \
		FeatureDetector.h \
		mir.h \
		Application.h \
		OutputMethods.h \
		GazeTracker.h \
		Video.h \
		Calibrator.h \
		ImageWindow.h \
		ImageWidget.h \
		DebugWindow.h \
		HeadCompensation.h \
		LeastSquares.h \
		HeadTracker.h \
		PointTracker.h \
		EyeExtractorSegmentationGrountruth.h \
		ExtractEyeFeaturesSegmentation.h \
		MainGazeTracker.h \
		Command.h \
		TestWindow.h \
		GoogleGlassWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GazeTrackerHistogramFeatures.o GazeTrackerHistogramFeatures.cpp

moc_MainGazeTracker.o: moc_MainGazeTracker.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_MainGazeTracker.o moc_MainGazeTracker.cpp

moc_ImageWidget.o: moc_ImageWidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ImageWidget.o moc_ImageWidget.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

